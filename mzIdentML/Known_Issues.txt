The following is a list of known issues with Search2mzIdentML:

Critical

-Format.findAccession(name) won't find the id if the pepXML name isn't the same as the mzIdentML name. The only solution I know is to manually alter the pepxml_name values in oboe.yaml.


-Currently, doesn't pass the validator. (http://www-bs2.informatik.uni-tuebingen.de/services/OpenMS/analysisXML/index.php)
-Search2mzIdentML.convert currently does a strict conversion--it only writes required elements to the mzIdentML file (and implements no options)





Less Critical
-PepXML.proteins doesn't return the same number of proteins that Mascot shows in its mzid file. Probably due to different cutoffs right now. May not be a problem. Not sure if alternative_proteins should be included.

-Format#conformScoreName(name, engine) currently covers only three search engine names. Also, since I added both pepxml and mzid term names to oboe.yaml, this method isn't really needed, but it allows for the differentiation of expect score IDs.
-Format#calMass(mass, charge) may be slightly off from the example mzid file, but I don't think it's a big deal.
-Format.experiMass(mass, charge, diff) may be off from example mzid file, but I don't think it's a big deal.
-PepXML.threshold I don't see a way to obtain the threshold value.
-PepXML.peptides doesn't return the same number of peptides that Mascot shows in its mzid file. Unsure of reason. May not be a problem. May be redundant with findAllPepLocations.
-PepXML.results currently bases the spectrum indices off of the pepXML search hits as opposed to an mgf's spectrum index. Not 100% sure if this is okay.
-PepXML.findAllPepLocations doesn't completely match Mascot's mzid file. Mascot's mzid file sometimes uses the alternative protein instead. Don't know why.
-PepXML.proteinID(protein) there may be other forms of protein IDs to handle that I haven't seen.
-PepXML.getItem(hit, rank, charge) is hard-coded to say passThreshold="true" because we don't deal with a global threshold at this point.
